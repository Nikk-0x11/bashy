#!/bin/bash

# get username
getUser () {
    getuser=$(who | awk '!seen[$1]++ {printf $1 ", "}')
    getuser=${getuser%\,*}
    echo $getuser
}

# Get type of OS (Supported: Linux, Mac and BSD)
getosType () {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "Linux"
        elif [[ "$OSTYPE" == "darwin"* ]]; then
        echo "Mac OSX"
        elif [[ "$OSTYPE" == "freebsd"* ]]; then
        echo "BSD"
    else
        echo "Unknown"
    fi
}

# formatted uptime
betterUptime()
{
    uptime --pretty | sed 's/up //' | sed 's/\ years\?,/y/' | sed 's/\ weeks\?,/w/' | sed 's/\ days\?,/d/' | sed 's/\ hours\?,\?/h/' | sed 's/\ minutes\?/m/'
}

# get cpu name
getCpuName()
{
    lscpu | grep 'Model name' | cut -f 2 -d ":" | awk '{$1=$1}1'
}

# get memory
getMem()
{
    free --mega | awk 'NR == 2 { print $3" / "$2" MB" }'
}

# get packages
availPackages() {
    packManagers=(
        'pacman'
        'apt'
        'dnf'
        'rpm'
        'emerge'
        'xbps-install'
        'nix'
    )
    for packManagers in "${packManagers[@]}"; do
        if command -v "$packManagers" 2> /dev/null >&2; then
            case "$packManagers" in
                pacman) pacman -Q | wc -l ;;
                apt) echo $(($(apt list --installed 2>/dev/null | wc -l) - 1)) ;;
                dnf) dnf list installed | wc -l ;;
                rpm) rpm -qa | wc -l ;;
                emerge) qlist -I | wc -l ;;
                xbps-install) xbps-query -l | wc -l ;;
                nix) nix-env -qa --installed '*' | wc -l ;;
            esac
            return
        fi
    done
    echo 0
}

# get distro name
getDistroName()
{
    grepos=$(uname -o)
	if [ "$greoos" = "Android" ]; then
		echo "Android"
	else
		cat /etc/os-release | awk -F '"' '/PRETTY_NAME/ { print $2 }'
	fi
}

echo "   user => $(getUser)"
echo "   host => $(cat /etc/hostname)"
echo " distro => $(getDistroName)"
echo " kernel => $(uname -r)"
echo "    pkg => $(availPackages)"
echo " uptime => $(betterUptime)"
echo "   dirs => $(tree ~/ -L 1|tail -1)"
echo "  shell => $SHELL"
echo "    cpu => $(getCpuName)"
echo "    mem => $(getMem)"